package com.inheritancetest;
/**
 * 子类对象实例化的全过程
 *  从结果上看 继承性
 *      子类继承父类之后，就获取了父类中声明的【属性或方法】
 *      创建子类的对象，在堆空间中，就会加载所有父类中声明的属性
 * 
 *  从过程上看
 *      当我们通过子类的构造器创造子类对象时，一定会直接or间接的调用父类的构造器,层层
 *      直接调用了java.lang.Object类中空参构造器位置。
 *      正因为加载过所有的父类结构，所以才可以看见内存中有父类的结构。子类才能进行调用。
 *      虽然说这么多，但自始至终其实只有一个对象。就是 new 出来的 ，不包括父类其他的对象的。
 *      因为父类并没有new，更没有父类对象的地址
 * 
 */
public class InstanceTest {
    
}
